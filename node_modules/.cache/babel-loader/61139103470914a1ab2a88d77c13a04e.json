{"ast":null,"code":"import { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport Subscription from \"./Subscription\";\nimport { setUserSubscriptionThunk } from \"../../Store/thunks\";\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    subscriptions: state.subscription.subscription\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setUserSubscription: function setUserSubscription() {\n      setUserSubscriptionThunk(dispatch);\n    }\n  };\n};\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps))(Subscription);","map":{"version":3,"names":["compose","connect","Subscription","setUserSubscriptionThunk","mapStateToProps","state","subscriptions","subscription","mapDispatchToProps","dispatch","setUserSubscription"],"sources":["C:/GitCatRedux/src/components/Subscription/SubscriptionContainer.jsx"],"sourcesContent":["import { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport Subscription from \"./Subscription\";\r\nimport { setUserSubscriptionThunk } from \"../../Store/thunks\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    subscriptions: state.subscription.subscription,\r\n  };\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setUserSubscription: () => {\r\n      setUserSubscriptionThunk(dispatch);\r\n    },\r\n  };\r\n};\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps))(Subscription);"],"mappings":"AAAA,SAASA,OAAT,QAAwB,OAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,wBAAT,QAAyC,oBAAzC;;AAEA,IAAIC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;EAC/B,OAAO;IACLC,aAAa,EAAED,KAAK,CAACE,YAAN,CAAmBA;EAD7B,CAAP;AAGD,CAJD;;AAKA,IAAIC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;EACrC,OAAO;IACLC,mBAAmB,EAAE,+BAAM;MACzBP,wBAAwB,CAACM,QAAD,CAAxB;IACD;EAHI,CAAP;AAKD,CAND;;AAQA,eAAeT,OAAO,CAACC,OAAO,CAACG,eAAD,EAAkBI,kBAAlB,CAAR,CAAP,CAAsDN,YAAtD,CAAf"},"metadata":{},"sourceType":"module"}